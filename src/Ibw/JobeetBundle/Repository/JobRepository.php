<?php

namespace Ibw\JobeetBundle\Repository;

use Doctrine\ORM\EntityRepository;
// use Doctrine;

/**
 * JobRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobRepository extends EntityRepository
{
 	public function getActiveJobs($category_id = null, $max = null, $offset = null)
    {
        $qb = $this->createQueryBuilder('j')
                   ->where('j.expires_at > :date')
                   ->setParameter('date', date('Y-m-d H:i:s', time()))
                   ->orderBy('j.expires_at', 'DESC');

        if($offset)
        {
            $qb->setFirstResult($offset);
        }
        if ($category_id) {
            $qb->andWhere('j.category = :category_id')
               ->setParameter('category_id', $category_id);
        }
	
        if($max) {
        	$qb->setMaxResults($max);
        }
        $query = $qb->getQuery();

        return $query->getResult();
    }
    
    public function getActiveJob($id)
    {
        $qb = $this->createQueryBuilder('j')
                   ->where('j.id=:id')
                   ->setParameter('id', $id)
                   ->andWhere('j.expires_at> :date')
                   ->setParameter('date', date('Y-m-d H:i:s', time()))
                   ->setMaxResults(1)
                   ->getQuery();
        try {
            $job = $qb->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            $job = null;
        }
        return $job;
    }

  public function countActiveJobs($catid = null)
  {
      $qb = $this->createQueryBuilder('j')
                 ->select('count(j.id)')
                 ->where('j.expires_at > :date')
                 ->setParameter('date', date('Y-m-d H:i:s', time()));

      if($catid)
      {
          $qb->andWhere('j.category=:catid')
             ->setParameter('catid', $catid);
      }

      return $qb->getQuery()
                ->getSingleScalarResult();
  }

}
